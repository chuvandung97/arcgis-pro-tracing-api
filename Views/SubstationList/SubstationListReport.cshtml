@model Schema.Web.Models.SLDSubstationListReportModel
@{ ViewBag.Title = "Substation List Report"; }
<link href="~/Content/custom-style.css" rel="stylesheet" />

@using (Html.BeginForm("SubstationListReport", "SubstationList", FormMethod.Post))
{
    //added by Sandip on 25th March 2021 for RFC0018439 -- To put restrictions on exposed report URLs.
    //added "GEMS_VIEWER_DISTRIBUTION" by Sandip on 18/04/2021 for RFC0032836, Implementation of MHA security clearance
    if (User.IsInRole("SINGAPOREPOWER\\GIS VIEWER") || User.IsInRole("SINGAPOREPOWER\\GEMS_VIEWER_DISTRIBUTION")|| User.IsInRole("SINGAPOREPOWER\\GEMS_Viewer_Distribution"))
    {
<div id="divSubstationList">
    <fieldset>
        <legend style="width: 357px;">Select Type of Substation List Report:</legend>
        <div class="row report-title">
            <div class="col-md-1">
                <label>Zone<label style="color: red; font-size:20px; padding:0px; margin:0px;">*</label></label>
            </div>
            <div class="col-md-3">
                @Html.DropDownListFor(m => m.SelectedZone, Model.Zones, new { @class = "form-control" })
            </div>
            <div class="col-md-1">
                <label>Voltage<label style="color: red; font-size:20px; padding:0px; margin:0px;">*</label></label>
            </div>
            <div class="col-md-3">
                @Html.DropDownListFor(m => m.SelectedVoltage, Model.Voltages, new { @class = "form-control" })
            </div>
            <div class="col-md-1">
                <label>Spacing@*<label style="color: red; font-size:20px; padding:0px; margin:0px;">*</label>*@</label>
            </div>
            <div class="col-md-3">
                @Html.DropDownListFor(m => m.SelectedSpacing, Model.Spacing, new { @class = "form-control" })
            </div>
        </div>
        <div class="row report-title">
            <div class="col-md-12">
                <input type="submit" name="button" class="btn btn-primary pull-right" value="Generate Report" />
            </div>
        </div>
    </fieldset>
</div> }
else
{<h1 style="font-size:300%;">Authorization has been denied for this request</h1>}
}

@section Scripts
{
    <script src="~/Scripts/jquery-3.1.1.min.js"></script>
    <script src="~/Scripts/jspdf.min.js"></script>
    <script src="~/Scripts/tableToCSV.js"></script>
    <script src="~/Scripts/jspdf.plugin.autotable.js"></script>
    <script src="~/Scripts/jquery.tablesorter.js"></script>
    <script type="text/javascript">
        $(window).resize(function () {

            $("tbody").css({
                "max-height": $(window).height() - 294
            });
        });
        $("tbody").css({
            "max-height": $(window).height() - 294
        });
        var hiddenVolt = document.getElementById('titleVoltage');
        var hiddenZone = document.getElementById('titleZone');

        var voltVal;
        var zoneVal;

        if (hiddenVolt.value == "22/6.6kV")
            voltVal = "22/6.6kV"
        else
            voltVal = hiddenVolt.value + " kV";

        if (hiddenZone.value == "ALL")
            zoneVal = ""
        else
            zoneVal = hiddenZone.value;

        var monthNames = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
        var dt = new Date();
        var fullDate = dt.getDate() + " " + monthNames[dt.getMonth()] + " " + dt.getFullYear();

        var reportTitle;
        var hiddenVal = document.getElementById('hdnDouble');
        if (hiddenVal.value == 'Single')
            reportTitle = "SUBSTATION LISTING FOR " + voltVal + " " + zoneVal + " NETWORK (Total Records = " + (document.getElementById('assets-data-table').rows.length - 1) / 2 + ")";
        else
            reportTitle = "SUBSTATION LISTING FOR " + voltVal + " " + zoneVal + " NETWORK (Total Records = " + (document.getElementById('assets-data-table').rows.length - 1) + ")";

        //reportTitle = reportTitle + "\n" + fullDate;
        //export to csv
        $(document).ready(function () {
            $("#csvExport").click(function () {
                $("#exportDiv").tableToCSV(reportTitle);
            });
            //$("#assets-data-table").tablesorter();
        });

        $(function () {
            var pdf = new jsPDF();
            var specialElementHandlers = {
                '#editor': function (element, renderer) {
                    return true;
                }
            };
            //export to PDF
            $('#pdfExport').click(function () {
                let pdf = new jsPDF('p', 'pt', 'a4');
                pdf.setFontSize(11);
                pdf.setTextColor(128, 0, 0);
                pdf.setFontStyle('courier');


                const header = function (data) {
                    pdf.setFontSize(10);
                    pdf.setTextColor(40, 0, 0);
                    pdf.setFontStyle('courier');
                    //for Page Count
                    let str = 'Page ' + data.pageCount;
                    pdf.text(str, 40, 20);
                };

                var names = [];
                var filtersSN = [];
                var filters22kv = [];
                var filtersALL22kv = [];
                var filters66kv = [];
                var filtersALL66kv = [];
                var totalSS = [];
                var newFilterST;
                var newFilterLoc;
                var table = tableToJson($('#assets-data-table').get(0))
                $.each(table, function (i, row) {
                    //console.debug(row); // 2nd parameter=top margin,1st=left margin 3rd=row cell width 4th=Row height
                    $.each(row, function (j, cell) {

                        if (j == 'stationname') {
                            newFilterST = cell;
                            var found = jQuery.inArray(newFilterST, filtersSN);
                            var found22 = jQuery.inArray(newFilterST, filters22kv);
                            var found66 = jQuery.inArray(newFilterST, filters66kv);
                            if (found >= 0) {
                                // Element was found, remove it.
                                //filters.splice(found, 1);
                            } else if (cell.toLowerCase() != 'station name') {
                                // Element was not found, add it.
                                filtersSN.push(newFilterST);
                            }
                            if (res == 2) {
                                filtersALL22kv.push(newFilterST);
                            }
                            else if (cell.toLowerCase() != 'station name') {
                                filtersALL66kv.push(newFilterST);
                            }
                            if (found22 >= 0) {
                                // Element was found, remove it.
                                //filters.splice(found, 1);

                            } else if (cell.toLowerCase() != 'station name' && res == 2) {
                                // Element was not found, add it.
                                filters22kv.push(newFilterST);
                            }
                            if (found66 >= 0) {
                                // Element was found, remove it.
                                //filters.splice(found, 1);
                            } else if (cell.toLowerCase() != 'station name' && res != 2) {
                                // Element was not found, add it.
                                filters66kv.push(newFilterST);
                            }
                        }
                        if (j == 'sheet') {
                            res = cell.charAt(0);
                        }
                    })
                });
                //var hiddenVoltageVal = document.getElementById('titleVoltage');
                //if (hiddenVoltageVal.value == 'ALL') {

                //    let ssSBT = 'Total number of 6.6kV switchboards: ' + filtersALL66kv.length;
                //    let ttSBT = 'Total number of 22kV switchboards: ' + filtersALL22kv.length;
                //    let SBT = 'Total number of substations: ' + filtersSN.length;
                //    let ssSST = 'Total number of 6.6kV substations: ' + filters66kv.length;
                //    let ttSST = 'Total number of 22kV substations: ' + filters22kv.length;
                //    pdf.text("\n\n" + ssSBT + "\n" + ttSBT + "\n" + SBT + "\n" + ssSST + "\n" + ttSST, 40, 20);
                //    pdf.text(reportTitle + "\n" + fullDate, 40, 120);
                //}
                //else if (hiddenVoltageVal.value == '6.6') {
                //    let ssSBT = 'Total number of switchboards: ' + filtersALL66kv.length;
                //    let SBT = 'Total number of substations: ' + filtersSN.length;
                //    pdf.text("\n\n" + ssSBT + "\n" + SBT , 40, 20);
                //    pdf.text(reportTitle + "\n" + fullDate, 40, 120);
                //}
                //else if (hiddenVoltageVal.value == '22') {
                //    let ssSBT = 'Total number of switchboards: ' + filtersALL22kv.length;
                //    let SBT = 'Total number of substations: ' + filtersSN.length;
                //    pdf.text("\n\n" + ssSBT + "\n" + SBT, 40, 20);
                //    pdf.text(reportTitle + "\n" + fullDate, 40, 120);
                //}
                var hiddenVoltageVal = document.getElementById('titleVoltage');
                var optionStartY;
                if (hiddenVoltageVal.value == '22/6.6kV') {
                    optionStartY = 140;
                    let ssSBT = 'Total number of 6.6kV switchboards: ' + filtersALL66kv.length;
                    let ttSBT = 'Total number of 22kV switchboards: ' + filtersALL22kv.length;
                    let SBT = 'Total number of substations: ' + filtersSN.length;
                    let ssSST = 'Total number of 6.6kV substations: ' + filters66kv.length;
                    let ttSST = 'Total number of 22kV substations: ' + filters22kv.length;
                    pdf.text("\n\n" + ssSBT + "\n" + ttSBT + "\n" + SBT + "\n" + ssSST + "\n" + ttSST, 40, 20);
                    pdf.text(reportTitle + "\n" + fullDate, 40, 120);
                }
                else if (hiddenVoltageVal.value == '6.6') {
                    optionStartY = 100;
                    let ssSBT = 'Total number of switchboards: ' + filtersALL66kv.length;
                    let SBT = 'Total number of substations: ' + filtersSN.length;
                    pdf.text("\n\n" + ssSBT + "\n" + SBT, 40, 20);
                    pdf.text(reportTitle + "\n" + fullDate, 40, 80);
                }
                else if (hiddenVoltageVal.value == '22') {
                    optionStartY = 100;
                    let ssSBT = 'Total number of switchboards: ' + filtersALL22kv.length;
                    let SBT = 'Total number of substations: ' + filtersSN.length;
                    pdf.text("\n\n" + ssSBT + "\n" + SBT, 40, 20);
                    pdf.text(reportTitle + "\n" + fullDate, 40, 80);
                }
                const totalPagesExp = '{total_pages_count_string}';

                const options = {
                    beforePageContent: header,
                    startY: optionStartY,
                    tableWidth: 'auto',
                    columnWidth: 'auto',
                    columnHeight: 'auto',
                    theme: 'grid',
                    //bodyStyles: {lineColor: [0, 0, 0]},
                    styles: {
                        font: 'courier',
                        fontSize: 9,
                        lineColor: [44, 62, 80],
                        lineWidth: 0.1,
                        cellPadding: 1,
                        overflow: 'linebreak',
                        rowHeight: 11,
                        rowWidth: 'auto',
                        valign: "top"
                    },
                    headerStyles: {
                        fillColor: [51, 122, 183],
                        fontSize: 10,
                        rowHeight: 13,
                        halign: 'center'
                    },
                    //alternateRowStyles: {
                    //    fillColor: [232, 233, 234]
                    //},
                    columnStyles: {
                        rowHeight: 1,
                        cellPadding: 0.5
                    }
                };

                const optionsDouble = {
                    beforePageContent: header,
                    //afterPageContent: footer,
                    startY: optionStartY,
                    tableWidth: 'auto',
                    columnWidth: 'auto',
                    columnHeigth: 'auto',
                    theme: 'grid',
                    //bodyStyles: {lineColor: [0, 0, 0]},

                    styles: {
                        font: 'courier',
                        fontSize: 9,
                        lineColor: [44, 62, 80],
                        lineWidth: 0.1,
                        cellPadding: 1,
                        overflow: 'linebreak',
                        rowHeight: 11,
                        rowWidth: 'auto',
                        valign: "top"
                    },
                    headerStyles: {
                        fillColor: [51, 122, 183],
                        fontSize: 10,
                        rowHeight: 13,
                        halign: 'center'
                    },
                    alternateRowStyles: {
                        // fillColor: [232, 233, 234],
                        rowHeight: 11
                    },
                    columnStyles: {
                        rowHeight: 1,
                        cellPadding: 0.5
                    }
                };
                var elem = document.getElementById('assets-data-table');

                var data = pdf.autoTableHtmlToJson(elem);
                //var hiddenVal = document.getElementById('hdnDouble');

                //alert(hiddenVal.value);
                if (hiddenVal.value == 'Single') {
                    pdf.autoTable(data.columns, data.rows, optionsDouble);
                }
                else {
                    pdf.autoTable(data.columns, data.rows, options);
                }

                // Total page number plugin only available in jspdf v1.0+
                if (typeof pdf.putTotalPages === 'function') {
                    pdf.putTotalPages(totalPagesExp);
                }
                var ts = new Date().getTime();
                pdf.save(reportTitle + "_" + ts + ".pdf");
            });
        });

        function tableToJson(table) {
            var data = [];
            // first row needs to be headers
            var headers = [];
            for (var i = 0; i < table.rows[0].cells.length; i++) {
                headers[i] = table.rows[0].cells[i].innerHTML.toLowerCase().replace(/ /gi, '');
            }
            // go through cells
            for (var i = 0; i < table.rows.length; i++) {

                var tableRow = table.rows[i];
                var rowData = {};

                for (var j = 0; j < tableRow.cells.length; j++) {
                    rowData[headers[j]] = tableRow.cells[j].innerHTML;
                }
                data.push(rowData);
            }
            return data;
        }
    </script>
}
  @if (User.IsInRole("SINGAPOREPOWER\\GIS VIEWER") || User.IsInRole("SINGAPOREPOWER\\GEMS_VIEWER_DISTRIBUTION") || User.IsInRole("SINGAPOREPOWER\\GEMS_Viewer_Distribution"))
  {
<div class="row" id="exportDiv">
    <div class="col-md-12 col-lg-12 col-sm-12">
        <div class="panel panel-primary list-panel" id="list-panel">
            <div class="panel-heading list-panel-heading">
                <h1 class="panel-title list-panel-title">SUBSTATION LISTING REPORT</h1>
            </div>
            @*<div class="panel-body">*@
            <div>
                @if (Model.Result != null)
                {
    <button id="pdfExport" data-export="export" class="pdfstyle"></button>
                    <button id="csvExport" data-export="export" class="csvstyle"></button>
                                    <input id="hdnDouble" type="hidden" value=@Html.DisplayFor(m => m.SelectedSpacing.Text) />
                                                    <input id="titleVoltage" type="hidden" value=@Html.DisplayFor(m => m.SelectedVoltage.Text) />
                                                                    <input id="titleZone" type="hidden" value=@Html.DisplayFor(m => m.SelectedZone.Text) />
                                                                                    <table id="assets-data-table"
                                                                                           class="table table-striped table-bordered"
                                                                                           style="width:100%;">
                                                                                        <thead style="width:100%; background-color:lightgray">
                                                                                            <tr>
                                                                                                <th>SNO.</th>
                                                                                                <th>MRC</th>
                                                                                                <th>ZONE</th>
                                                                                                <th>SHEET</th>
                                                                                                <th>SEG</th>
                                                                                                <th>STATION NAME</th>
                                                                                                <th>LOCATION</th>
                                                                                                <th>GEAR</th>
                                                                                            </tr>
                                                                                        </thead>
                                                                                        <tbody style="width:100.2%; overflow-y:scroll; overflow-x:hidden">
                                                                                            @foreach (var asset in Model.Result)
                                                                                            {
                                                                            <tr>
                                                                                <td>@asset["sno"]</td>
                                                                                <td>@asset["mrc"]</td>
                                                                                <td>@asset["zone"]</td>
                                                                                <td>@asset["sheet"]</td>
                                                                                <td>@asset["segment"]</td>
                                                                                <td>@asset["substationname"]</td>
                                                                                <td>@asset["locationdescription"]</td>
                                                                                <td>@asset["gear"]</td>
                                                                            </tr> if (Model.SelectedSpacing.Text == "No Spacing")
                                                                                                { @*<tr>
                                                                                                            <td colspan="8"></td>
                                                                                                        </tr>*@ }
                                                                                                else if (Model.SelectedSpacing.Text == "Single Spacing")
                                                                                                {
                                                                        <tr>
                                                                            <td colspan="8"><br /></td>
                                                                        </tr>}
                                                                                            }

                                                                                        </tbody>
                                                                                    </table> }
                else
                {
                                                                    <label style="color: red; font-size:12px; padding:0px; margin:0px;">@Html.DisplayFor(m => m.Message)</label>}
            </div>
        </div>
    </div>
</div>
  }
