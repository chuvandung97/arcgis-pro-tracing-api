@model Schema.Web.Models.SLDTotalNetworkTransformerReportModel

@{ ViewBag.Title = "Transformer Report"; }

<link href="~/Content/custom-style.css" rel="stylesheet" />

@using (Html.BeginForm("TotalNetworkTransformerReport", "TotalNetworkTransformer", FormMethod.Post))
{
    //added by Sandip on 25th March 2021 for RFC0018439 -- To put restrictions on exposed report URLs.
    //added "GEMS_VIEWER_DISTRIBUTION" by Sandip on 18/04/2021 for RFC0032836, Implementation of MHA security clearance
    if (User.IsInRole("SINGAPOREPOWER\\GIS VIEWER") || User.IsInRole("SINGAPOREPOWER\\GEMS_VIEWER_DISTRIBUTION") || User.IsInRole("SINGAPOREPOWER\\GEMS_Viewer_Distribution"))
    {
<div id="divTotalNetworkTransformer">
    <fieldset>
        <legend style="width: 200px;">Transformer Report:</legend>
        <div class="row report-title">
            <div class="col-md-4" style="padding:0px">
                <label>MVA Ratings<label style="color: red; font-size:20px; padding:0px; margin:0px;">*</label></label>
            </div>
            <div class="col-md-4">
                @Html.DropDownListFor(m => m.SelectedMVARating, Model.MVARatings, new { @class = "form-control" })
            </div>
            <div class="col-md-4">
                <input type="submit" name="button" class="btn btn-primary pull-right" value="Generate Report" />
            </div>
        </div>
    </fieldset>
</div>}
else
{<h1 style="font-size:300%;">Authorization has been denied for this request</h1>}
}
@section Scripts
{
    <script src="~/Scripts/jquery-3.1.1.min.js"></script>
    <script src="~/Scripts/jspdf.min.js"></script>
    <script src="~/Scripts/tableToCSV.js"></script>
    <script src="~/Scripts/jspdf.plugin.autotable.js"></script>

    <script type="text/javascript">

        // adjust table body height based on widow size
        $(window).resize(function () {

            $("tbody").css({
                "max-height": $(window).height() - 294
            });
        });

        // set default table height based on window height
        $("tbody").css({
            "max-height": $(window).height() - 294
        });

        var hiddenVal = document.getElementById('hdnReportType');
        var reportTitle;
        if (hiddenVal.value == 'ALL')
            reportTitle = "Transformer " + hiddenVal.value + " MVA Rating Report (Total Records = " + (document.getElementById('assets-data-table').rows.length - 1) + ")";
        else
            reportTitle = "Transformer " + hiddenVal.value + " Report (Total Records = " + (document.getElementById('assets-data-table').rows.length - 1) + ")";

        $(document).ready(function () {
            $("#csvExport").click(function () {
                $("#exportDiv").tableToCSV(reportTitle);
            });
        });

        //export To PDF
        $(function () {
            var pdf = new jsPDF();
            var specialElementHandlers = {
                '#editor': function (element, renderer) {
                    return true;
                }
            };
            //export to PDF
            $('#pdfExport').click(function () {
                let pdf = new jsPDF('l', 'pt', 'a4');
                pdf.setFontSize(11.5);
                pdf.setTextColor(128, 0, 0);
                pdf.setFontStyle('courier');
                pdf.text(reportTitle, 40, 35);
                const header = function (data) {
                    pdf.setFontSize(10);
                    pdf.setTextColor(40, 0, 0);
                    pdf.setFontStyle('normal');
                    //for Page Count
                    let str = 'Page ' + data.pageCount;
                    pdf.text(str, 40, 20);
                };

                const totalPagesExp = '{total_pages_count_string}';

                const options = {
                    beforePageContent: header,
                    //afterPageContent: footer,
                    startY: 60,
                    tableWidth: 'auto',
                    columnWidth: 'auto',
                    theme: 'grid',
                    //bodyStyles: {lineColor: [0, 0, 0]},
                    styles: {
                        font: 'courier',
                        lineColor: [44, 62, 80],
                        lineWidth: 0.75,
                        overflow: 'linebreak'
                    },
                    headerStyles: {
                        fillColor: [51, 122, 183],
                        fontSize: 10
                    },
                    alternateRowStyles: {
                        //fillColor: [232, 233, 234]
                    },
                    margin: {
                        top: 30
                    }
                };

                var elem = document.getElementById('assets-data-table');
                var data = pdf.autoTableHtmlToJson(elem);

                pdf.autoTable(data.columns, data.rows, options);

                // Total page number plugin only available in jspdf v1.0+
                if (typeof pdf.putTotalPages === 'function') {
                    pdf.putTotalPages(totalPagesExp);
                }
                var ts = new Date().getTime();
                pdf.save(reportTitle + "_" + ts + ".pdf");
            });
        });
    </script>
}
@if (User.IsInRole("SINGAPOREPOWER\\GIS VIEWER") || User.IsInRole("SINGAPOREPOWER\\GEMS_VIEWER_DISTRIBUTION") || User.IsInRole("SINGAPOREPOWER\\GEMS_Viewer_Distribution"))
{
<div class="row" id="exportDiv">
    <div class="col-md-12">
        <div class="panel panel-primary list-panel" id="list-panel">
            @*<div class="panel-heading list-panel-heading">
                    <h1 class="panel-title list-panel-title">Total Network Transformer Report</h1>
                </div>*@
            @*<div class="panel-body">*@
            <div>
                <input id="hdnReportType" type="hidden" value=@Html.DisplayFor(m => m.SelectedMVARating.Text) />
                @if (Model.Result != null)
                {
<div class="resultsheading">
    <h1 class="panel-title list-panel-title">Transformer @Html.DisplayFor(m => m.SelectedMVARating.Text) Report</h1>
</div>
                    <button id="pdfExport" data - export="export" class="pdfstyle"></button>
                                        <button id="csvExport" data-export="export" class="csvstyle"></button>
                                                            <table id="assets-data-table"
                                                                   class="table table-striped table-bordered"
                                                                   style="width:100%;">

                                                                <thead style="width:100%; background-color:lightgray">
                                                                    <tr>
                                                                        <th>SNO.</th>
                                                                        <th>Source Zone</th>
                                                                        <th>Source Stn</th>
                                                                        <th>TF Capacity (MVA)</th>
                                                                        <th>TF No</th>
                                                                        <th>Max Load (Mth)</th>
                                                                        <th>Max Load (Day)</th>
                                                                        <th>Max Load (Night)</th>
                                                                        <th>All Time High Load Reading</th>
                                                                        <th>All Time High Load Reading Date</th>
                                                                    </tr>
                                                                </thead>
                                                                <tbody style="width:100.2%; overflow-y:scroll; overflow-x:hidden">
                                                                    @foreach (var asset in Model.Result)
                                                                    {
                                                <tr>
                                                    <td>@asset["rn"]</td>
                                                    <td>@asset["source_zone"]</td>
                                                    <td>@asset["source_substation"]</td>
                                                    <td>@asset["trf_mvarating"]</td>
                                                    <td>@asset["trf_no"]</td>
                                                    <td>@asset["prevmth_maxloadreading"]</td>
                                                    <td>@asset["dayloadreading"]</td>
                                                    <td>@asset["nightloadreading"]</td>
                                                    <td>@asset["alltime_maxloadreading"]</td>
                                                    <td>@asset["alltime_maxloadreading_date"]</td>
                                                </tr>
                                                                    }
                                                                </tbody>
                                                            </table> }
                else
                {
                    if (Model.SelectedMVARating.Text != "Please Select")
                    {
                                        <div class="resultsheading">
                                            <h1 class="panel-title list-panel-title">Transformer @Html.DisplayFor(m => m.SelectedMVARating.Text) Report</h1>
                                        </div> }
                    else
                    {
                <div class="resultsheading">
                    <h1 class="panel-title list-panel-title">Transformer Report</h1>
                </div> }
<label style="color: red; font-size:12px; padding:0px; margin:0px;">&nbsp;&nbsp;@Html.DisplayFor(m => m.Message)</label> if (Model.Message != "Select mandatory fields to continue..." && Model.Message != "No results found" && Model.Message != "" && Model.Message != null)
                    {
<button id="pdfExport" data - export="export" class="pdfstyle"></button>
                        <button id="csvExport" data-export="export" class="csvstyle"></button>}
                }
            </div>
        </div>
    </div>
</div>
}